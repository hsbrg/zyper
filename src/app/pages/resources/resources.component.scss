// optimized resources.component2.scss
$primary-bg: #18181b;
$card-bg: #ffffff;
$primary-text: #ffffff;
$secondary-text: #71717a;
$background-dark: #2a2a2a;
$background-bg-primary: #d7e6ff;
$background-light: #f0f0f0;
$primary-color: #7A7CCB;
$text-dark: #000000;
$font-bebas: "Bebas Neue", sans-serif;

// Cube Colors and Properties
$cube-base-color: #7A7CCB;
$cube-colors: (
  front: $cube-base-color,
  side: darken($cube-base-color, 10%),
  top: darken($cube-base-color, 15%),
);

// Define base sizes
$cube-sizes: (
  desktop: 240px,
  tablet: 180px,
  mobile: 150px,
);

.resources-main-container {
  width: 100%;
  position: relative;
  min-height: calc(100vh - 90px);

  .cube-background {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    pointer-events: none;
    z-index: 0;

    .cube {
      position: absolute;
      width: map-get($cube-sizes, desktop);
      height: map-get($cube-sizes, desktop);
      opacity: 0.6;
      transform-origin: center center;
      will-change: transform, opacity; // here focused properties
      transition: all 0.3s ease;

      // Generate multiple cube variations
      @for $i from 1 through 6 {
        &:nth-child(#{$i}) {
          animation: floatCube
            10s
            cubic-bezier(0.25, 0.1, 0.25, 1)
            infinite; // Smoothed easing
          animation-delay: #{$i * 0.3}s;
          top: #{random(80)}vh;
          left: #{random(90)}vw;
          transform: translate(0, 0)
            scale(#{0.8 + random(4) * 0.1})
            rotate(#{random(360)}deg);
        }
      }

      svg {
        width: 100%;
        height: 100%;
      }

      .cube-face {
        transition: all 0.3s ease;

        &-front {
          fill: map-get($cube-colors, front);
        }

        &-side {
          fill: map-get($cube-colors, side);
        }

        &-top {
          fill: map-get($cube-colors, top);
        }
      }

      &:hover {
        opacity: 0.8;
        transform: scale(1.05);

        .cube-face {
          filter: brightness(1.2);
        }

        .cube-edges {
          stroke: rgba(255, 255, 255, 0.8);
          stroke-width: 2;
        }
      }
    }
  }

  .resources-section {
    width: 100%;
    // position: relative;
    min-height: 100vh;
    background-color: $background-bg-primary;
    padding: 2rem;
    display: flex;
    justify-content: center;
    align-items: flex-start;

    @media (min-width: 768px) {
      padding: 4rem 2rem;
    }

    @media (min-width: 1200px) {
      padding: 6rem 4rem;
    }
  }

  .resources-container {
    max-width: 1400px;
    width: 100%;
  }

  // Animation Keyframes
  @keyframes floatCube {
    0% {
      transform: translateY(0) rotate(0deg);
    }
    25% {
      transform: translateY(-10px) rotate(3deg);
    }
    50% {
      transform: translateY(-20px) rotate(-2deg);
    }
    75% {
      transform: translateY(-10px) rotate(1deg);
    }
    100% {
      transform: translateY(0) rotate(0deg);
    }
  }

  @keyframes pulseFront {
    0%,
    100% {
      fill: map-get($cube-colors, front);
    }
    50% {
      fill: lighten(map-get($cube-colors, front), 10%);
    }
  }

  @keyframes pulseSide {
    0%,
    100% {
      fill: map-get($cube-colors, side);
    }
    50% {
      fill: lighten(map-get($cube-colors, side), 10%);
    }
  }

  @keyframes pulseTop {
    0%,
    100% {
      fill: map-get($cube-colors, top);
    }
    50% {
      fill: lighten(map-get($cube-colors, top), 10%);
    }
  }

  @keyframes glowEdges {
    0%,
    100% {
      stroke: rgba(255, 255, 255, 0.5);
      stroke-width: 1;
    }
    50% {
      stroke: rgba(255, 255, 255, 0.8);
      stroke-width: 1.5;
    }
  }

  // Parallax Effect
  .cube-background {
    &::before {
      content: "";
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      pointer-events: none;
    }
  }

  // Scroll-based animations
  @media (min-width: 768px) {
    .cube {
      transition: transform 0.1s ease;

      @for $i from 1 through 10 {
        &:nth-child(#{$i}) {
          animation-duration: #{6 + $i * 0.5}s;
          animation-delay: #{$i * 0.2}s;
        }
      }
    }
  }

  .resources-title {
    width: fit-content;
    z-index: 1;
    position: relative;
    margin: 0 auto;
    font-family: $font-bebas;
    font-size: 3rem;
    font-weight: 700;
    color: $primary-text;
    margin-bottom: 2rem;
    letter-spacing: 0.05em;
    text-align: center;

    @media (min-width: 768px) {
      font-size: 4rem;
    }

    @media (min-width: 1200px) {
      font-size: 4rem;
    }
  }

  .resources-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(413px, 1fr));
    gap: 1.5rem;
    width: 100%;
  }

  .resources-card {
    background-color: $background-light;
    border-radius: 12px;
    overflow: hidden;
    transition: transform 0.3s ease, box-shadow 0.3s ease;
    text-decoration: none;
    display: flex;
    flex-direction: column;
    aspect-ratio: 1 / 1;

    &:hover {
      transform: translateY(-5px);
      box-shadow: 0 10px 20px rgba(0, 0, 0, 0.2);
    }

    .resources-card-content {
      position: relative;
      height: 100%;
      padding: 1.5rem;
      background: linear-gradient(135deg, #7A7CCB 0%, #7A7CCB 95%);
      display: flex;
      flex-direction: column;
      justify-content: space-between;
      // border: 3px solid white;
      transition: background-color 0.3s ease;
      &::before {
        content: "";
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: url("/assets/images/logo.png") no-repeat center center;
        background-size: contain;
        opacity: 0.15;
      }
      &:hover {
        .resources-card-arrow {
          opacity: 1;
          transform: translate(-50%, -50%) scale(1);
        }
      }
      .resources-card-date {
        font-size: 1rem;
        opacity: 85%;
        color: #fff;
        margin-top: 0.5rem;
      }
      .resources-card-content:hover {
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
      }
    }

    .resources-card-arrow {
      position: absolute;
      bottom: 0;
      right: 0;
      width: 50px;
      height: 50px;
      border-radius: 50%;
      display: flex;
      justify-content: center;
      align-items: center;
      background-color: whitesmoke;
      opacity: 0;
      transition: opacity 0.3s ease, transform 0.3s ease;
      transform: translate(-50%, -50%) scale(0.8);
    }

    .resources-card-title {
      font-family: $font-bebas;
      font-size: 2rem;
      font-weight: 700;
      color: $primary-text;
      margin-bottom: 1rem;
      letter-spacing: 0.2rem;

      @media (min-width: 768px) {
        font-size: 2.5rem;
      }

      @media (min-width: 1200px) {
        font-size: 2.8rem;
      }
    }
  }

  // Responsive Styles
  @media (max-width: 1200px) {
    .cube {
      width: map-get($cube-sizes, tablet);
      height: map-get($cube-sizes, tablet);
    }
  }

  @media (max-width: 768px) {
    .cube-background .cube {
      width: map-get($cube-sizes, mobile);
      height: map-get($cube-sizes, mobile);

      &[class*="cube-"] {
        transform: scale(0.6);
      }
    }

    .resources-grid {
      grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    }
  }

  @media (max-width: 480px) {
    .cube-background .cube {
      transform: scale(0.4);
    }

    .resources-grid {
      grid-template-columns: 1fr;
    }
  }

  // Performance Optimizations
  .cube-background {
    transform: translateZ(0);
    backface-visibility: hidden;
    perspective: 1000px;
  }

  .resources-social-links {
    display: flex;
    justify-content: center;
    gap: 1rem;
    margin-top: 2rem;

    .resources-social-link {
      position: relative;
      z-index: 1;
      width: 40px;
      height: 40px;
      background-color: $background-dark;
      border-radius: 50%;
      display: flex;
      align-items: center;
      justify-content: center;
      transition: background-color 0.3s ease, transform 0.3s ease;

      &:hover {
        background-color: #2a4b6f;
        transform: translateY(-3px);
      }
    }
  }

  @media (max-width: 768px) {
    .resources-section {
      padding: 2rem 1.5rem;

      .resources-title {
        font-size: 2.5rem;
      }
    }

    .resources-grid {
      grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
      gap: 1rem;
    }
  }

  @media (max-width: 480px) {
    .resources-section {
      padding: 1.5rem;

      .resources-title {
        font-size: 2rem;
      }
    }

    .resources-grid {
      grid-template-columns: 1fr;
      gap: 1rem;
    }
  }
}

// Optional: Add smooth scrolling to the whole page
html {
  scroll-behavior: smooth;
}

// Optional: Better background contrast
body {
  background-color: $background-dark;
  color: $primary-text;
}

.floating-button {
  position: fixed;
  bottom: 1.5rem;
  right: 1.5rem;
  background-color: #2a4b6f;
  border: #2a4b6f;
  color: $primary-text;
  width: 3rem;
  height: 3rem;
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  transition: background-color 0.3s ease;

  &:hover {
    background-color: darken(#2a4b6f, 10%);
  }
}
